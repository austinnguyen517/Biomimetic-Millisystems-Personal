// Generated by gencpp from file dstar_nav/cliff.msg
// DO NOT EDIT!


#ifndef DSTAR_NAV_MESSAGE_CLIFF_H
#define DSTAR_NAV_MESSAGE_CLIFF_H

#include <ros/service_traits.h>


#include <dstar_nav/cliffRequest.h>
#include <dstar_nav/cliffResponse.h>


namespace dstar_nav
{

struct cliff
{

typedef cliffRequest Request;
typedef cliffResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct cliff
} // namespace dstar_nav


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::dstar_nav::cliff > {
  static const char* value()
  {
    return "a9018bdf22282cd0592a32946602fd53";
  }

  static const char* value(const ::dstar_nav::cliff&) { return value(); }
};

template<>
struct DataType< ::dstar_nav::cliff > {
  static const char* value()
  {
    return "dstar_nav/cliff";
  }

  static const char* value(const ::dstar_nav::cliff&) { return value(); }
};


// service_traits::MD5Sum< ::dstar_nav::cliffRequest> should match 
// service_traits::MD5Sum< ::dstar_nav::cliff > 
template<>
struct MD5Sum< ::dstar_nav::cliffRequest>
{
  static const char* value()
  {
    return MD5Sum< ::dstar_nav::cliff >::value();
  }
  static const char* value(const ::dstar_nav::cliffRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::dstar_nav::cliffRequest> should match 
// service_traits::DataType< ::dstar_nav::cliff > 
template<>
struct DataType< ::dstar_nav::cliffRequest>
{
  static const char* value()
  {
    return DataType< ::dstar_nav::cliff >::value();
  }
  static const char* value(const ::dstar_nav::cliffRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::dstar_nav::cliffResponse> should match 
// service_traits::MD5Sum< ::dstar_nav::cliff > 
template<>
struct MD5Sum< ::dstar_nav::cliffResponse>
{
  static const char* value()
  {
    return MD5Sum< ::dstar_nav::cliff >::value();
  }
  static const char* value(const ::dstar_nav::cliffResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::dstar_nav::cliffResponse> should match 
// service_traits::DataType< ::dstar_nav::cliff > 
template<>
struct DataType< ::dstar_nav::cliffResponse>
{
  static const char* value()
  {
    return DataType< ::dstar_nav::cliff >::value();
  }
  static const char* value(const ::dstar_nav::cliffResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DSTAR_NAV_MESSAGE_CLIFF_H
